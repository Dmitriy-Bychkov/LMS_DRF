version: '3'

services:

  redis:
    image: redis
    ports:
      - '6380:6379'

  db:
    image: postgres
    env_file:
      - .env
    environment:
      #- POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
      #- POSTGRES_DB=${DATABASE_NAME}
      #- POSTGRES_USER=${DATABASE_USER}
      #- POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    ports:
      - '5433:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    env_file:
      - .env
    tty: true
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

    ports:
      - '8001:8000'
    depends_on:
      db:
        condition: service_healthy


  celery:
    build: .
    env_file:
      - .env
    tty: true
    command: sh -c "sleep 5 && celery -A config worker -l INFO"
    depends_on:
      - redis
      - app

  celery_beat:
    build: .
    env_file:
      - .env
    tty: true
    command: sh -c "sleep 10 && celery -A config beat -l info -S django"
    depends_on:
      - celery
      - redis
      - app
#    environment:
#      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
#      - POSTGRES_DB=${DATABASE_NAME}
#      - POSTGRES_USER=${DATABASE_USER}
#      - POSTGRES_HOST=db

volumes:
  pg_data: